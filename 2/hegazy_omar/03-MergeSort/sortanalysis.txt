KEY 
# OF ELEMENTS IN ARRAY (DOUBLES, RANDOMLY GENERATED)  : TIME IT TOOK IN SECONDS TO SORT 

Bubble
0 0.001
2500 0.018
5000 0.058
7500 0.104
10000 0.191
12500 0.303
15000 0.469
17500 0.648
20000 0.838
22500 1.366
25000 1.412
27500 2.129
30000 2.095
32500 2.254
35000 2.688
37500 3.089
40000 3.502
42500 4.446
45000 4.497
47500 4.988
50000 5.838

Insert
0 0.0
2500 0.009
5000 0.008
7500 0.017
10000 0.018
12500 0.035
15000 0.044
17500 0.084
20000 0.081
22500 0.094
25000 0.111
27500 0.124
30000 0.153
32500 0.175
35000 0.27
37500 0.302
40000 0.312
42500 0.411
45000 0.401
47500 0.479
50000 0.466
52500 0.643
55000 0.779
57500 0.811
60000 0.92
62500 0.948
65000 0.805
67500 0.922
70000 0.946
72500 1.018
75000 0.983
77500 1.272
80000 1.145
82500 1.496
85000 1.346
87500 1.556
90000 2.084
92500 1.819
95000 1.823
97500 2.33
100000 2.183

Radix
0 0.0
2500 0.072
5000 0.048
7500 0.04
10000 0.091
12500 0.094
15000 0.044
17500 0.067
20000 0.106
22500 0.069
25000 0.089
27500 0.077
30000 0.133
32500 0.149
35000 0.087
37500 0.156
40000 0.097
42500 0.138
45000 0.148
47500 0.22
50000 0.177
52500 0.194
55000 0.173
57500 0.299
60000 0.261
62500 0.223
65000 0.291
67500 0.231
70000 0.254
72500 0.293
75000 0.262
77500 0.322
80000 0.388
82500 0.294
85000 0.317
87500 0.281
90000 0.397
92500 0.299
95000 0.483
97500 0.403
100000 0.372

Merge
0 0.0
2500 0.005
5000 0.014
7500 0.018
10000 0.025
12500 0.033
15000 0.049
17500 0.058
20000 0.086
22500 0.107
25000 0.086
27500 0.117
30000 0.093
32500 0.104
35000 0.11
37500 0.116
40000 0.091
42500 0.12
45000 0.126
47500 0.127
50000 0.136
52500 0.145
55000 0.165
57500 0.186
60000 0.191
62500 0.195
65000 0.183
67500 0.171
70000 0.196
72500 0.219
75000 0.224
77500 0.24
80000 0.262
82500 0.247
85000 0.225
87500 0.232
90000 0.323
92500 0.297
95000 0.282
97500 0.38
100000 0.328
102500 0.46
105000 0.335
107500 0.359
110000 0.377
112500 0.412
115000 0.428
117500 0.386
120000 0.334
122500 0.491
125000 0.417
127500 0.414
130000 0.538
132500 0.432
135000 0.475
137500 0.545
140000 0.45
142500 0.462
145000 0.529
147500 0.722
150000 0.771
152500 0.482
155000 0.464
157500 0.503
160000 0.48
162500 0.648
165000 0.593
167500 0.571
170000 0.588
172500 0.605
175000 0.551
177500 0.517
180000 0.537
182500 0.603
185000 0.68
187500 0.72
190000 0.615
192500 0.76
195000 0.793
197500 0.968
200000 0.911

Tweaked Quicksort
0 0.0
2500 0.001
5000 0.002
7500 0.001
10000 0.002
12500 0.002
15000 0.003
17500 0.003
20000 0.004
22500 0.005
25000 0.005
27500 0.007
30000 0.006
32500 0.009
35000 0.005
37500 0.006
40000 0.007
42500 0.019
45000 0.015
47500 0.022
50000 0.004
52500 0.004
55000 0.004
57500 0.006
60000 0.005
62500 0.006
65000 0.009
67500 0.006
70000 0.007
72500 0.008
75000 0.011
77500 0.013
80000 0.009
82500 0.011
85000 0.011
87500 0.009
90000 0.012
92500 0.009
95000 0.009
97500 0.009
100000 0.009
102500 0.008
105000 0.008
107500 0.009
110000 0.009
112500 0.009
115000 0.01
117500 0.01
120000 0.01
122500 0.01
125000 0.01
127500 0.011
130000 0.011
132500 0.014
135000 0.017
137500 0.014
140000 0.015
142500 0.015
145000 0.018
147500 0.03
150000 0.014
152500 0.014
155000 0.014
157500 0.013
160000 0.014
162500 0.015
165000 0.014
167500 0.015
170000 0.015
172500 0.015
175000 0.015
177500 0.016
180000 0.017
182500 0.016
185000 0.016
187500 0.017
190000 0.016
192500 0.017
195000 0.017
197500 0.018
200000 0.018

---

-Which algorithms seemed to work (in)efficiently:
	Radix and Merge. Both take 30x more time than Godsort at 100K elements, and Merge is 45x shittier at 200K elements. 
-Radix performance:
	Things start going downhill very early; at like 10K elements. This is because Im using doubles here and Radix relies on O(nk), where k is avg key length - I rounded the Doubles down to 10 digits, which means muy grande keys. I -did- expect Merge to be a little faster; I know quicksort is faster than mergesort but not 45x as bad.
-Other observations:
	I’m dumb and lazy it seems 
	Radix messes up when you give it doubles 
	Algorithms used :
	ALL DOUBLES -	
		Bubble,Insert,Radix,Merge,TweakedQuickSort
	