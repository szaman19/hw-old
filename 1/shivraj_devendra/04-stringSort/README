If you are trying to find a specific element in a list that is already sorted, instead of going through every element till you reach it, you can use a variation of the divide and conquer algorithm.

-You first find the index of the element in the middle (length / 2) and check to see if that element is the one you're looking for.
-If it's not, you compare it to the element you're looking for and check to see if it comes after it or before it.
-You then run the algorithm back, this time using the appropiate half of the list (if the one you're looking for is less than the one you find, you look through the smaller half of the list, otherwise you look through the larger half of the list) (pseudo-code is below)

binarySearch(list, element){
   if element == middleElement of list
      return middleElement index
   else
      if element < middleElement
         return binarySearch(list(elements before the middleElement index),element)
      else 
         return binarySearch(list(elements after the middleElement index),element)	  
}
