import java.util.*;

public class MergeSort1{
    public <E extends Comparable<E>> ArrayList<E> Merge(ArrayList<E> a, ArrayList<E> b){
	int i = 0, j = 0;
	ArrayList<E> result = new ArrayList<E>();
	while ((i < a.size()) && (j < b.size())) {
	    if (a.get(i).compareTo(b.get(j)) < 0) {
		result.add(a.get(i++));
	    }else {
		result.add(b.get(j++));
	    }
	}
	while (i < a.size()) {
	    result.add(a.get(i++));}
	while (j < b.size()) {
	    result.add(b.get(j++));}
	return result;
    }
    
    public <E extends Comparable<E>> ArrayList<E> MergeSort(ArrayList<E> array){
	ArrayList<E> x = new ArrayList<E>(), y = new ArrayList<E>();
	if (array.size() < 2){
	    return array;
	}else if(array.size() %2 != 0){
	    for(int i = 0; i < array.size()/2; i++){
		x.add(array.get(i));
	    }for(int j = 0; j < (array.size()/2+1); j++){
		y.add(array.get(array.size()/2+1+j));
	    }
	    x = MergeSort(x);
	    y = MergeSort(y);
	    return Merge(x,y);
	}else if(array.size() %2 == 0 && array.size() > 1){
	    for(int i = 0; i < array.size()/2; i++){
		x.add(array.get(i));
	    }for(int j = 0; j < (array.size()/2); j++){
		y.add(array.get(array.size()/2+j));
	    }
	    x = MergeSort(x);
	    y = MergeSort(y);
	    System.out.println(x);
	    System.out.println(y);
	    return Merge(x,y);
	}
	return array;
    }
    
    public static void main(String[]args){
	ArrayList<Person> a = new ArrayList<Person>();
	Random random = new Random();
	MergeSort1 m = new MergeSort1();
	final String[] ALPHABET = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"};
	for (int i = 0; i < 4; i++) {
	    //a.add(Person(random.nextInt(20),ALPHABET[random.nextInt(26)]));
	    a.add(new Person(random.nextInt(20),"Yo"));
	}
	System.out.println(a);
	System.out.println(m.MergeSort(a));
    }
    
}

public class Person{
    public <E extends Comparable<E>> Person(int a, String n){
	int age = a;
	String name = n;
    }
}
